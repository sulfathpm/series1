#include <stdio.h>
#define SIZE 5  // Define maximum size of the queue

int queue[SIZE];
int front = -1, rear = -1;

// Function to check if queue is full
int isFull() {
    return ((rear + 1) % SIZE == front);
}

// Function to check if queue is empty
int isEmpty() {
    return (front == -1);
}

// Function to insert an element into the circular queue
void enqueue(int value) {
    if (isFull()) {
        printf("Queue is Full! Cannot insert %d\n", value);
        return;
    }
    if (isEmpty()) {
        front = 0;
        rear = 0;
    } else {
        rear = (rear + 1) % SIZE;
    }
    queue[rear] = value;
    printf("%d inserted into queue.\n", value);
}

// Function to delete an element from the circular queue
void dequeue() {
    if (isEmpty()) {
        printf("Queue is Empty! Cannot delete.\n");
        return;
    }
    printf("%d deleted from queue.\n", queue[front]);
    if (front == rear) {  // Only one element was present
        front = -1;
        rear = -1;
    } else {
        front = (front + 1) % SIZE;
    }
}

// Function to display the queue
void display() {
    if (isEmpty()) {
        printf("Queue is Empty!\n");
        return;
    }
    printf("Queue elements: ");
    int i = front;
    while (1) {
        printf("%d ", queue[i]);
        if (i == rear)
            break;
        i = (i + 1) % SIZE;
    }
    printf("\n");
}

// Function to count number of elements in the queue
int countElements() {
    if (isEmpty())
        return 0;
    if (rear >= front)
        return rear - front + 1;
    else
        return SIZE - front + rear + 1;
}

// Main function
int main() {
    int choice, value;
    while (1) {
        printf("\n--- Circular Queue Menu ---\n");
        printf("1. Insert (Enqueue)\n");
        printf("2. Delete (Dequeue)\n");
        printf("3. Display\n");
        printf("4. Count Elements\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Number of elements in queue: %d\n", countElements());
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
    return 0;
}
